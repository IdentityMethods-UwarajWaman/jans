#!/usr/bin/expect -f

set HOST [lindex $argv 0]
set USERNAME [lindex $argv 1]
set timeout -1
spawn $env(SHELL)
match_max 100000
expect  "$"
send -- "ssh ${USERNAME}@${HOST}"
expect -exact "${HOST}"
send -- "\r"
expect -re "(.*)\n"
send -- "curl https://raw.githubusercontent.com/JanssenProject/jans/main/jans-linux-setup/jans_setup/install.py > install.py"
expect -exact "curl https://raw.githubusercontent.com/JanssenProject/jans/main/jans-linux-setup/jans_setup/install.py > install.py"
send -- "\r"
expect -re "(.*)\n"
send -- "python3 install.py --args=\"--cli-test-client\""
expect "python3 install.py --args=\"--cli-test-client\""
send -- "\r"
expect { 
	"python3-ldap3. Install now?"  {send "Y\r"}
	"Do you want to install these now?" {send "Y\r"} 
	 "Install now? \[Y\/n\]" {send "Y\r"}
	"RAM size" {send "Y\r"}
	"free disk space" {send "Y\r"}
	 "Proceed anyways?" {send "Y\r"}
	"Apache-2.0 license?" {send "Y\r"}
	}
expect -re "(.*)\n"
send "y\r"	

expect -re "(.*)\n"
send -- "y\r"

expect -re "(.*)\n" 
send -- "\r"
expect -re "(.*)\n"
send -- "\r"
expect  -exact "\r
Enter your city or locality : "
send -- "pune"
expect  "pune"
send -- "\r"

expect -exact "Enter your state or province two letter code : "
send -- "mh\r"

expect "Enter two letter Country Code : "
send -- "91"
expect -exact "91"
send -- "\r"

expect "Enter Organization Name : "
send -- "glu\r"
expect "Enter email address for support at your organization : "
send -- "manojsurya78@gmail.com\r"
expect  "manojsurya78@gmail.com"
send -- "\r"
expect " : "
send -- "Admin@123"
expect "Admin@123"
send -- "\r"
expect -exact "\r
Chose Backend Type:\r
  1 Local OpenDj\r
  2 Remote OpenDj\r
  3 Local MySQL\r
  4 Remote MySQL\r
  5 Remote Couchbase\r
  6 Cloud Spanner\r
Selection \[1\]: "
send -- "1\r"
expect -re "(.*)\n"
send -- "\r"
expect -re "(.*)\n"
send -- "\r"

expect "Install Jans Auth Config Api?" 
send -- "\r"

expect "Install Scim Server?"
send -- "\r"

expect "Install Fido2 Server?"
send -- "\r"

expect "Install Eleven Server?"
send -- "\r"

expect -re "(.*)\n"
send -- "\r"

expect -re "(.*)\n"
send -- "\r"

expect "Proceed with these values "
send -- "\r"

expect "Janssen Server installation successful\!"
send -- "\r"
#expect -re "(.*)\n"

#send -- "ps ax \| grep \-v grep \| grep jans \> \/dev\/null \; echo \$\?\r" 
#if { $expect_out(buffer) eq "0" } {
	 puts "installation successful" }
#send -- "exit\r"
#expect -exact "exit"
#send -- "\x03"
expect eof
